# Script de Verifica√ß√£o do Sistema DelivX
Write-Host "üîç Verificando sistema para DelivX..." -ForegroundColor Green
Write-Host ""

# Verificar Ruby
Write-Host "Verificando Ruby..." -ForegroundColor Yellow
try {
    $rubyVersion = ruby --version
    Write-Host "‚úÖ Ruby encontrado: $rubyVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Ruby n√£o encontrado. Instale Ruby 3.0+ primeiro." -ForegroundColor Red
    exit 1
}

# Verificar Bundler
Write-Host "Verificando Bundler..." -ForegroundColor Yellow
try {
    $bundlerVersion = bundle --version
    Write-Host "‚úÖ Bundler encontrado: $bundlerVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Bundler n√£o encontrado. Instalando..." -ForegroundColor Yellow
    gem install bundler
    Write-Host "‚úÖ Bundler instalado!" -ForegroundColor Green
}

# Verificar diret√≥rio do projeto
Write-Host "Verificando diret√≥rio do projeto..." -ForegroundColor Yellow
$projectPath = "c:\Delivery\delivx\backend"
if (Test-Path $projectPath) {
    Write-Host "‚úÖ Diret√≥rio do projeto encontrado: $projectPath" -ForegroundColor Green
} else {
    Write-Host "‚ùå Diret√≥rio do projeto n√£o encontrado: $projectPath" -ForegroundColor Red
    exit 1
}

# Verificar Gemfile
Set-Location $projectPath
if (Test-Path "Gemfile") {
    Write-Host "‚úÖ Gemfile encontrado" -ForegroundColor Green
} else {
    Write-Host "‚ùå Gemfile n√£o encontrado no diret√≥rio do projeto" -ForegroundColor Red
    exit 1
}

# Verificar banco de dados
Write-Host "Verificando banco de dados..." -ForegroundColor Yellow
if (Test-Path "db\development.sqlite3") {
    Write-Host "‚úÖ Banco de dados existe" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è Banco de dados n√£o existe - ser√° criado automaticamente" -ForegroundColor Yellow
}

# Verificar frontend
Write-Host "Verificando frontend..." -ForegroundColor Yellow
$frontendPath = "c:\Delivery\delivx\frontend\index.html"
if (Test-Path $frontendPath) {
    Write-Host "‚úÖ Frontend encontrado: $frontendPath" -ForegroundColor Green
} else {
    Write-Host "‚ùå Frontend n√£o encontrado: $frontendPath" -ForegroundColor Red
}

# Verificar porta 3000
Write-Host "Verificando porta 3000..." -ForegroundColor Yellow
$port3000 = Get-NetTCPConnection -LocalPort 3000 -ErrorAction SilentlyContinue
if ($port3000) {
    Write-Host "‚ö†Ô∏è Porta 3000 est√° em uso. O servidor pode usar outra porta." -ForegroundColor Yellow
} else {
    Write-Host "‚úÖ Porta 3000 est√° dispon√≠vel" -ForegroundColor Green
}

Write-Host ""
Write-Host "üéâ Verifica√ß√£o conclu√≠da!" -ForegroundColor Green
Write-Host ""
Write-Host "Para iniciar o projeto:" -ForegroundColor Cyan
Write-Host "1. Execute: c:\Delivery\delivx\start_server.bat" -ForegroundColor White
Write-Host "2. Abra: c:\Delivery\delivx\frontend\index.html" -ForegroundColor White
Write-Host ""
Write-Host "Pressione qualquer tecla para continuar..." -ForegroundColor Gray
$null = $Host.UI.RawUI.ReadKey("NoEcho,IncludeKeyDown")
